/*!
* This file has been dynamically generated by Class Interface Xml (CIX)
* DO NOT MODIFY THIS FILE -- CHANGES WILL BE OVERWRITTEN UPON REGENERATION
* If changes need to occur, modify the appropriate CIX xml file
* Date Generated: LET VERSION CONTROL TRACK
* If any issues are experiences with this generated file that cannot be fixed
* with adjustment of the CIX xml file, please contact Robert A. Lefebvre,
* raq@ornl.gov
*/
#include "Vec_DblInterface.h"
#include <string.h>
void* ScaleSTL_Vec_Dbl_initialize_size( size_t* size )
{
    return new ScaleSTL_Vec_Dbl( *size );
}

void* ScaleSTL_Vec_Dbl_initialize_copy( ScaleSTL_Vec_Dbl* orig )
{
    return new ScaleSTL_Vec_Dbl( *orig );
}

size_t ScaleSTL_Vec_Dbl_size( void* ScaleSTL_Vec_Dbl_ptr )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->size();
}

size_t ScaleSTL_Vec_Dbl_element_length( void* ScaleSTL_Vec_Dbl_ptr,
                                        size_t* index )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )
        ->element_length( *index );
}

size_t ScaleSTL_Vec_Dbl_total_element_length( void* ScaleSTL_Vec_Dbl_ptr )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->total_element_length();
}

size_t ScaleSTL_Vec_Dbl_max_element_length( void* ScaleSTL_Vec_Dbl_ptr )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->max_element_length();
}

void ScaleSTL_Vec_Dbl_resize( void* ScaleSTL_Vec_Dbl_ptr, size_t* newSize )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->resize( *newSize );
}

void ScaleSTL_Vec_Dbl_reserve( void* ScaleSTL_Vec_Dbl_ptr, size_t* maxSize )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->reserve( *maxSize );
}

void ScaleSTL_Vec_Dbl_resize_fill( void* ScaleSTL_Vec_Dbl_ptr,
                                   size_t* newSize,
                                   double* fill )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->resize( *newSize, *fill );
}

bool ScaleSTL_Vec_Dbl_empty( void* ScaleSTL_Vec_Dbl_ptr )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->empty();
}

double ScaleSTL_Vec_Dbl_at( void* ScaleSTL_Vec_Dbl_ptr, size_t* index )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->at( *index );
}

void ScaleSTL_Vec_Dbl_set( void* ScaleSTL_Vec_Dbl_ptr,
                           size_t* index,
                           double* value )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->set( *index, *value );
}

double ScaleSTL_Vec_Dbl_front( void* ScaleSTL_Vec_Dbl_ptr )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->front();
}

double ScaleSTL_Vec_Dbl_back( void* ScaleSTL_Vec_Dbl_ptr )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->back();
}

void ScaleSTL_Vec_Dbl_push_back( void* ScaleSTL_Vec_Dbl_ptr, double* newValue )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->push_back( *newValue );
}

void ScaleSTL_Vec_Dbl_pop_back( void* ScaleSTL_Vec_Dbl_ptr )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->pop_back();
}

void ScaleSTL_Vec_Dbl_insert( void* ScaleSTL_Vec_Dbl_ptr,
                              size_t* index,
                              double* item )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->insert( *index, *item );
}

void ScaleSTL_Vec_Dbl_erase( void* ScaleSTL_Vec_Dbl_ptr, size_t* index )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->erase( *index );
}

bool ScaleSTL_Vec_Dbl_contains( void* ScaleSTL_Vec_Dbl_ptr, double* item )
{
    return ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->contains( *item );
}

void ScaleSTL_Vec_Dbl_clear( void* ScaleSTL_Vec_Dbl_ptr )
{
    ( (ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr )->clear();
}

void* ScaleSTL_Vec_Dbl_initialize() { return new ScaleSTL_Vec_Dbl(); }
void ScaleSTL_Vec_Dbl_destroy( void* ScaleSTL_Vec_Dbl_ptr )
{
    delete(ScaleSTL_Vec_Dbl*)ScaleSTL_Vec_Dbl_ptr;
}
